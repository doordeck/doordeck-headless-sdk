[versions]
agp = "8.5.2"
bouncy-castle = "1.81"
indispensable-asn1 = "3.17.0" # Don't update to a newer version without verifying whether watchosDeviceArm64 is still supported.
kotlin = "2.2.20"
multiplatform-settings = "1.3.0"
android-min-sdk = "26"
android-compile-sdk = "34"
ios-min-sdk = "14"
macos-min-sdk = "14"
watchos-min-sdk = "11"
nimbus-jose-jwt = "10.4"
ktor-client = "3.2.3"
libsodium = "0.9.2"
security-crypto = "1.1.0"
kotlinx-datetime = "0.6.2" # Do not update to 0.7.0 unless the other dependencies that rely on kotlinx-datetime are also using the same version.
kotlin-coroutines-test = "1.10.2"
swift-klib = "1.1.0"
asn1js = "3.0.6"
pkijs = "3.2.5"
kermit = "2.0.8"
buildkonfig = "0.17.1"

[libraries]
bouncy-castle = { module = "org.bouncycastle:bcprov-jdk18on", version.ref = "bouncy-castle" }
indispensable-asn1 = { module = "at.asitplus.signum:indispensable-asn1", version.ref = "indispensable-asn1" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
multiplatform-settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatform-settings" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlin-coroutines-test" }

# Ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor-client" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor-client" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor-client" }
ktor-client-encoding = { module = "io.ktor:ktor-client-encoding", version.ref = "ktor-client" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor-client" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor-client" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor-client" }
ktor-client-winhttp = { module = "io.ktor:ktor-client-winhttp", version.ref = "ktor-client" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor-client" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor-client" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor-client" }

# Crypto
libsodium-bindings-js = { module = "com.ionspin.kotlin:multiplatform-crypto-libsodium-bindings-js", version.ref = "libsodium" }
libsodium-bindings-mingwx64 = { module = "com.ionspin.kotlin:multiplatform-crypto-libsodium-bindings-mingwx64", version.ref = "libsodium" }

# Utils
nimbus-jose-jwt = { module = "com.nimbusds:nimbus-jose-jwt", version.ref = "nimbus-jose-jwt" }
security-crypto = { module = "androidx.security:security-crypto", version.ref = "security-crypto" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
kermit-logger = { module = "co.touchlab:kermit", version.ref = "kermit" }

[plugins]
android-library = { id = "com.android.library", version.ref = "agp" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-cocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
swift-klib = { id = "io.github.bernatcarbo.swiftklibfork", version.ref = "swift-klib" }
buildkonfig = { id = "com.codingfeline.buildkonfig", version.ref = "buildkonfig" }