name: CI
on:
  push:
    branches:
      - feature/react-native-sdk
#      - main
  pull_request:
    branches:
      - main
  merge_group:
    types:
      - checks_requested

jobs:
#  build-android:
#    runs-on: ubuntu-latest
#    env:
#      TURBO_CACHE_DIR: .turbo/android
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      - name: Setup
#        uses: ./.github/actions/react-native-setup
#
#      - name: Cache turborepo for Android
#        uses: actions/cache@v4
#        with:
#          path: ${{ env.TURBO_CACHE_DIR }}
#          key: ${{ runner.os }}-turborepo-android-${{ hashFiles('yarn.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-turborepo-android-
#
#      - name: Check turborepo cache for Android
#        run: |
#          cd react-native
#          TURBO_CACHE_STATUS=$(node -p "($(yarn turbo run build:android --cache-dir="${{ env.TURBO_CACHE_DIR }}" --dry=json)).tasks.find(t => t.task === 'build:android').cache.status")
#
#          if [[ $TURBO_CACHE_STATUS == "HIT" ]]; then
#            echo "turbo_cache_hit=1" >> $GITHUB_ENV
#          fi
#
#      - name: Install JDK
#        if: env.turbo_cache_hit != 1
#        uses: actions/setup-java@v4
#        with:
#          distribution: 'zulu'
#          java-version: '17'
#
#      - name: Finalize Android SDK
#        if: env.turbo_cache_hit != 1
#        run: |
#          /bin/bash -c "yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses > /dev/null"
#
#      - name: Cache Gradle
#        if: env.turbo_cache_hit != 1
#        uses: actions/cache@v4
#        with:
#          path: |
#            ~/.gradle/wrapper
#            ~/.gradle/caches
#          key: ${{ runner.os }}-gradle-${{ hashFiles('example/android/gradle/wrapper/gradle-wrapper.properties') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-
#
#      - name: Build example for Android
#        env:
#          JAVA_OPTS: "-XX:MaxHeapSize=6g"
#        run: |
#          cd react-native
#          yarn turbo run build:android --cache-dir="${{ env.TURBO_CACHE_DIR }}"

#  build-ios:
#    runs-on: macos-latest
#    env:
#      TURBO_CACHE_DIR: .turbo/ios
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      - name: Setup
#        uses: ./.github/actions/react-native-setup
#
#      - name: Cache turborepo for iOS
#        uses: actions/cache@v4
#        with:
#          path: ${{ env.TURBO_CACHE_DIR }}
#          key: ${{ runner.os }}-turborepo-ios-${{ hashFiles('yarn.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-turborepo-ios-
#
#      - name: Check turborepo cache for iOS
#        run: |
#          cd react-native
#          TURBO_CACHE_STATUS=$(node -p "($(yarn turbo run build:ios --cache-dir="${{ env.TURBO_CACHE_DIR }}" --dry=json)).tasks.find(t => t.task === 'build:ios').cache.status")
#
#          if [[ $TURBO_CACHE_STATUS == "HIT" ]]; then
#            echo "turbo_cache_hit=1" >> $GITHUB_ENV
#          fi
#
#      - name: Restore cocoapods
#        if: env.turbo_cache_hit != 1
#        id: cocoapods-cache
#        uses: actions/cache/restore@v4
#        with:
#          path: |
#            ./react-native/**/ios/Pods
#          key: ${{ runner.os }}-cocoapods-${{ hashFiles('example/ios/Podfile.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-cocoapods-
#
#      - name: Install cocoapods
#        if: env.turbo_cache_hit != 1 && steps.cocoapods-cache.outputs.cache-hit != 'true'
#        run: |
#          cd react-native
#          cd example/ios
#          pod install
#        env:
#          NO_FLIPPER: 1
#
#      - name: Cache cocoapods
#        if: env.turbo_cache_hit != 1 && steps.cocoapods-cache.outputs.cache-hit != 'true'
#        uses: actions/cache/save@v4
#        with:
#          path: |
#            ./react-native/**/ios/Pods
#          key: ${{ steps.cocoapods-cache.outputs.cache-key }}
#
#      - name: Build example for iOS
#        run: |
#          cd react-native
#          yarn turbo run build:ios --cache-dir="${{ env.TURBO_CACHE_DIR }}"

  publish-npm:
#    needs: [build-android, build-ios]
    runs-on: ubuntu-latest
    env:
      DOORDECK_SDK_VERSION: 0.0.2
#    if: (success() && github.ref == 'refs/heads/main') || startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Version in podspec and Gradle
        run: |
          cd react-native
          
          # Modify Podspec file
          sed -i "s/doordeck_sdk_version = '.*'/doordeck_sdk_version = '${DOORDECK_SDK_VERSION}'/" HeadlessReactNativeSdk.podspec

          # Modify build.gradle
          sed -i 's/def doordeckSdkVersion = ".*"/def doordeckSdkVersion = "'"${DOORDECK_SDK_VERSION}"'"/' android/build.gradle

          cat HeadlessReactNativeSdk.podspec
          cat android/build.gradle

      - name: Setup
        uses: ./.github/actions/react-native-setup

      - name: Build package
        run: |
          cd react-native
          yarn prepare

      - name: Update package.json version
        run: |
          cd react-native
          jq --arg version "$DOORDECK_VERSION" '.version = $version' package.json > tmp.json && mv tmp.json package.json
          cat package.json

      - name: Publish to npm
#        env:
#          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISHING_TOKEN }}
        run: |
          cd react-native
          npm publish --access public
