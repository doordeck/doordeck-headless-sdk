name: Build

on:
  push:
    branches:
      - 'main'
    tags:
      - v*.*.*
  pull_request:
    branches:
      - 'main'

jobs:
  validation:
    name: "Gradle Wrapper Validation"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: gradle/wrapper-validation-action@v2

  build:
    needs: validation
    env:
      TEST_AUTH_TOKEN: ${{ secrets.TEST_AUTH_TOKEN }}
      TEST_MAIN_USER_PRIVATE_KEY: ${{ secrets.TEST_MAIN_USER_PRIVATE_KEY }}
      TEST_MAIN_USER_PUBLIC_KEY: ${{ secrets.TEST_MAIN_USER_PUBLIC_KEY }}
      TEST_SUPPLEMENTARY_USER_ID: ${{ secrets.TEST_SUPPLEMENTARY_USER_ID }}
      TEST_SUPPLEMENTARY_USER_PUBLIC_KEY: ${{ secrets.TEST_SUPPLEMENTARY_USER_PUBLIC_KEY }}
      TEST_MAIN_TILE_ID: ${{ secrets.TEST_MAIN_TILE_ID }}
      TEST_MAIN_LOCK_ID: ${{ secrets.TEST_MAIN_LOCK_ID }}
      TEST_ENV_VAR: 9f8e96ae-bed8-43a4-ac5e-2f55dc6a85cb
    strategy:
      matrix:
        include:
          - name: JVM
            test: jvmTest
            os: ubuntu-latest
          - name: Android
            test: testReleaseUnitTest
            os: ubuntu-latest
          - name: JS
            test: kotlinUpgradeYarnLock jsTest
            os: ubuntu-latest
          - name: Apple
            test: iosX64Test macosArm64Test macosX64Test
            os: macos-latest
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.name }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: corretto
          java-version: 21
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Tests
        run: ./gradlew ${{ matrix.test }}

  release:
    name: Releases
    needs: build
    if: (success() && github.ref == 'refs/heads/main') || startsWith(github.ref, 'refs/tags/v')
    runs-on: macos-latest

    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Git
        run: |
          git config --global user.name "Doordeck Development"
          git config --global user.email "development@doordeck.com"

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: corretto
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Tag for release (if on main)
        if: github.ref == 'refs/heads/main'
        run: ./gradlew final -x test

      - name: Publish
        run: ./gradlew -Prelease.useLastTag=true :library:publish --stacktrace -x test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Parse release version
        id: version_info
        run: echo version=$(./gradlew properties -q -Prelease.useLastTag=true | grep "version:" | awk '{print $2}') >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release
        env:
            GH_TOKEN: ${{ github.token }}
        run: |
          gh release create v${{ steps.version_info.outputs.version }} --title "Release v${{ steps.version_info.outputs.version }}" --verify-tag --generate-notes