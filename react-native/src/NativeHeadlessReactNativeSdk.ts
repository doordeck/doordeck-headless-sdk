import type {TurboModule} from 'react-native';
import {TurboModuleRegistry} from 'react-native';

export interface Spec extends TurboModule {
  /**
   * @param email       - email of the user
   * @param password    - password of the user
   *
   * @returns needsVerification [Promise] of [boolean] being this boolean whether the user needs to verify and
   *                            an email was sent.
   *                            Be aware that two consecutive logins with `needVerification == true` in less
   *                            than one minute will result into a `NEEDS_VERIFICATION_ERROR` as there is a
   *                            60-second throttle for this operation
   */
  login(
    email: string,
    password: string,
  ): Promise<AssistedRegisterEphemeralKeyResponse>;

  /**
   * @param authToken   - token for this user
   *
   * @returns needsVerification [Promise] of [boolean] being this boolean whether the user needs to verify and
   *                            an email was sent.
   *                            Be aware that two consecutive logins with `needVerification == true` in less
   *                            than one minute will result into a `NEEDS_VERIFICATION_ERROR` as there is a
   *                            60-second throttle for this operation
   */
  setAuthToken(
    authToken: string,
  ): Promise<AssistedRegisterEphemeralKeyResponse>;

  /**
   * @param code  - code sent for verification
   */
  verify(code: string): Promise<void>

  /**
   * Logs out the user inside the SDK.
   * This doesn't delete any local data generated by the React Native SDK.
   *
   * @return a Promise when it's done.
   */
  logout(): Promise<void>

  /**
   * @param tileId - tile UUID usually scanned from a QR code or obtained from an NFC tag
   *
   * @returns TileLocksResponse where locks belonging to that tile can be found
   */
  getLocksBelongingToTile(tileId: string): Promise<TileLocksResponse>;

  /**
   * @param lockId - lock UUID associated to a tile
   */
  unlockDevice(lockId: string): Promise<void>;
}

export type TileLocksResponse = {
  siteId: string;
  tileId: string;
  deviceIds: string[];
};

export type AssistedRegisterEphemeralKeyResponse = {
  requiresVerification: boolean;
}

export default TurboModuleRegistry.getEnforcing<Spec>('HeadlessReactNativeSdk');
